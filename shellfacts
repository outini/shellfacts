#! /bin/sh

[ "$DEBUG" = "true" ] || DEBUG=false

## reconfigure default facts directory according to your system
default_facts_dir="/etc/shellfacts/facts.d"

[ -z "$FACTSDIR" ] && facts_dir="$default_facts_dir" ||
facts_dir="$FACTSDIR"


usage() {
    cat <<EOF >&2
$@
Usage: $0 <action> [options]
       $0 run [fact.sh [fact.sh [facts.sh [...]]]]
       $0 dump <file> [fact.sh [fact.sh [facts.sh [...]]]]

Actions:
   run       Run facts scripts from facts directory, default is all scripts.
   dump      Dump generated facts in a yaml file.
   help      Show this usage.

Use this script to generate facts from your operating system.
Facts directory can be specified via environment variable: FACTSDIR, default is
  $default_facts_dir
Only scripts named *.sh are runned from facts directory.

This script can produce a yaml output with all generated facts
Every facts scripts have to respect yaml syntax.

EOF
    exit 1
}

run_facts() {
    wanted_facts="$@"
    for facts_script in ${facts_dir}/*.sh; do
	[ -z "${wanted_facts}" ] || {
            echo "${wanted_facts}" | grep -qw "`basename ${facts_script}`" ||
	    continue
	}

	${DEBUG} && echo "[DEBUG] running: ${facts_script}" >&2
	"${facts_script}" "$@"
    done
    return 0
}

[ $# -lt 1 ] && usage
action="$1"; shift

[ -d "${facts_dir}" ] || usage "facts directory not found: ${facts_dir}"

case "${action}" in
    run)
	run_facts "$@"
	;;

    dump)
	[ -z "$1" ] && usage "action dump requires a file"
	out_file="$1"; shift
	echo "---" > "${out_file}"
	run_facts "$@" >> "${out_file}"
	;;

    help) usage ;;

    *) usage "Unknown action: ${action}"
esac
